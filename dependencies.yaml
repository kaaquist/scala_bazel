options:
  buildHeader: [ "load(\"@io_bazel_rules_scala//scala:scala_import.bzl\", \"scala_import\")",
    "load(\"@io_bazel_rules_scala//scala:scala.bzl\", \"scala_library\", \"scala_binary\", \"scala_test\")" ]
  languages: [ "java", "scala:2.12.11" ]
  resolvers:
    - id: "mavencentral"
      type: "default"
      url: https://repo.maven.apache.org/maven2/
    - id: "hmrc"
      type: "default"
      url: https://hmrc.bintray.com/releases
  strictVisibility: true
  thirdPartyDirectory: "third_party/jvm"
  versionConflictPolicy: highest

dependencies:
  ch.qos.logback:
    logback-classic:
      lang: java
      version: "1.2.3"

  com.github.pureconfig:
    pureconfig:
      lang: scala
      modules: [ "core", "generic", "macros" ]
      version: "0.11.1"

  com.typesafe.scala-logging:
    scala-logging:
      lang: scala
      version: "3.9.4"

  commons-io:
    commons-io:
      lang: java
      version: "2.11.0"

  org.apache.avro:
    avro:
      lang: java
      version: "1.11.0"

  org.apache.hadoop:
    hadoop:
      lang: java
      modules: [ "common", "hdfs" ]
      version: "3.2.0"

  org.apache.parquet:
    parquet-avro:
      lang: java
      version: "1.10.0"

  org.scalatest:
    scalatest:
      lang: scala
      version: "3.2.3"

replacements:
  org.scala-lang:
    scala-compiler:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_compiler//:io_bazel_rules_scala_scala_compiler"
    scala-library:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_library//:io_bazel_rules_scala_scala_library"
    scala-reflect:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_reflect//:io_bazel_rules_scala_scala_reflect"

  org.scala-lang.modules:
    scala-parser-combinators:
      lang: scala
      target:
        "@io_bazel_rules_scala_scala_parser_combinators//:io_bazel_rules_scala_scala_parser_combinators"
    scala-xml:
      lang: scala
      target: "@io_bazel_rules_scala_scala_xml//:io_bazel_rules_scala_scala_xml"
